using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

public class DialogueManager : MonoBehaviour
{
    private Queue<NewConversation.NextCharacter> _QueueOfCharacters = new Queue<NewConversation.NextCharacter>();
    private Queue<string[]> _QueueOfStringArrays = new Queue<string[]>();
    private Queue<string> _QueueOfStrings = new Queue<string>();

    private NewConversation newConversation;

    public GameObject DialoguePanel;
    public Button ButtonContinue;
    public Text TextNPCName;
    public Text TextDialogueBox;
    public Text TextContinueDialogue;

    public void Start()
    {
        DialoguePanel.SetActive(false);
        TextNPCName.text = "";
        TextDialogueBox.text = "";
        TextContinueDialogue.text = "";
    }

    public void StartDialogue(NewConversation newDialogue)
    {
        newConversation = newDialogue;

        TextContinueDialogue.text = "Next";

        _QueueOfCharacters.Clear();
        _QueueOfStringArrays.Clear();
        _QueueOfStrings.Clear();

        AddCharactersToQueue(newConversation.ListOfCharacterExchanges);
        AddCharacterDialogueToQueue(_QueueOfCharacters);
        AddSentencesToQueue(_QueueOfStringArrays);

        DisplayNextExchange();
    }

    public void DisplayNextExchange()
    {
        TextNPCName.text = _QueueOfCharacters.Peek().CharacterName;
        StopAllCoroutines();
        StartCoroutine(TypeSentence(TextDialogueBox.text = _QueueOfStrings.Dequeue()));

        //Is the string queue empty?
        if (_QueueOfStrings.Count == 0)
        {
            //If yes, dequeue from tthe stringArray queue and and new sentences to the string queue
            AddSentencesToQueue(_QueueOfStringArrays);

            //Is the stringArray queue empty?
            if (_QueueOfStringArrays.Count == 0)
            {
                //If yes, dequeue from the character queue and change the character name
                TextNPCName.text = _QueueOfCharacters.Dequeue().CharacterName;

                //Is the character queue empty?
                if (_QueueOfCharacters.Count == 0)
                {
                    //If yes, end dialogue
                    EndDialogue();
                }
            }
        }

        else if (_QueueOfCharacters.Count == 0 && _QueueOfStringArrays.Count == 0 && _QueueOfStrings.Count == 1)
        {
            TextContinueDialogue.text = "End";
        }
    }

    IEnumerator TypeSentence(string sentence)
    {
        TextDialogueBox.text = "";

        foreach (char letter in sentence.ToCharArray())
        {
            TextDialogueBox.text += letter;
            yield return null;
        }
    }

    private void EndDialogue()
    {
        DialoguePanel.SetActive(false);
    }

    #region Queues
    /*_________________________________________________________________________*/
    private void AddCharactersToQueue(List<NewConversation.NextCharacter> characterList)
    {
        foreach (NewConversation.NextCharacter character in characterList)
        {
            _QueueOfCharacters.Enqueue(character);
            Debug.Log(character.CharacterName);
        }
    }

    private void AddCharacterDialogueToQueue(Queue<NewConversation.NextCharacter> characterQueue)
    {
        foreach (NewConversation.NextCharacter characterDialogue in characterQueue)
        {
            _QueueOfStringArrays.Enqueue(characterDialogue.NumOfSentences);
            Debug.Log(characterDialogue.NumOfSentences);
        }
    }

    private void AddSentencesToQueue(Queue<string[]> characterDialogueQueue)
    {
        string[] array = characterDialogueQueue.Peek();

        foreach (string item in array)
        {
            _QueueOfStrings.Enqueue(item);
            Debug.Log(item);
        }
    }
    /*_________________________________________________________________________*/
    #endregion
}